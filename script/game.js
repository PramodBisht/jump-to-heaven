	window.onload=function(){		// Crafty.modules({ 'crafty-debug-bar': 'release' }, function () {    // Crafty.debugBar.show();// });	   var makeplat=false;	Crafty.init(1200,765);		// Crafty.modules({ 'crafty-debug-bar': 'release' }, function () {    // Crafty.debugBar.show();// });Crafty.background("rgb(127,0,0)");	Crafty.audio.add({	sound:["assets/a.mp3"],	collide:["assets/button.mp3"],	piano:["assets/piano2.mp3"]		}); Crafty.sprite("assets/angel.png",{	pos1: [0,0,65,95],	pos2: [0,95,65,95]		});Crafty.sprite(32,"assets/bricks2.png",{brick:[0,0]});Crafty.sprite(179,"assets/back.png",{back:[0,0]});Crafty.sprite(82,"assets/play.png",{play:[0,0]});Crafty.sprite(82,"assets/pause.png",{pause:[0,0]});Crafty.sprite("assets/text/start_sent.png",{startpng:[0,34,100,68]});Crafty.sprite("assets/text/scoreboard.png",{scoreboardpng:[0,34,300,68]});Crafty.sprite("assets/text/settings.png",{settingspng:[0,34,180,68]});Crafty.sprite("assets/text/credits.png",{creditpng:[0,34,150,68]});Crafty.sprite("assets/text/quit.png",{quitpng:[0,34,150,68]});Crafty.sprite("assets/text/game_over.png",{gameoverpng:[0,34,250,68]});Crafty.sprite("assets/text/loading.png",{loadingpng:[0,34,250,68]});Crafty.sprite("assets/text/developedby.png",{developedbypng:[0,34,300,68]});Crafty.sprite("assets/text/devname.png",{devnamepng:[0,34,500,68]});Crafty.sprite("assets/text/Sound.png",{soundpng:[0,34,250,68]});Crafty.sprite("assets/text/kevin.png",{kevinpng:[0,34,300,68]});Crafty.sprite("assets/text/highscore.png",{highscorepng:[0,34,300,68]});Crafty.sprite("assets/text/score_sen.png",{scorepng:[0,34,300,68]});		Crafty.scene("Loading");	}	Crafty.scene("Loading",function(){		 Crafty.background("rgb(208,231,249)");        Crafty.e("2D,DOM ,loadingpng").attr({ x: 550, y: 320 });           // .text("  Loading ");										Crafty.load(["assets/angel.png"],function(){						Crafty.scene("option");									});								});		Crafty.scene("option",function(){			//Crafty.setName("inside option screen");				//init:function()	Crafty.audio.play("piano",-1);	Crafty.audio.stop("sound");		Crafty.e("2D,DOM, startpng,Startcom, Mouse").attr({ x: 550, y: 200}).bind('Click',function(){	//  console.log("clicked");	Crafty.audio.stop("piano");	Crafty.audio.play("collide");	 Crafty.scene("game");	}).bind("MouseOver",function(){	Crafty.audio.play("collide",1);		});            //.text(" Start");		Crafty.e("2D,DOM, scoreboardpng, Mouse").attr({  x: 490, y: 300 }).bind("MouseOver",function(){	Crafty.audio.play("collide",1);		});;          //  .text(" Score Board");		Crafty.e("2D,DOM, settingspng, Mouse").attr({ x: 520, y: 400 }).bind("MouseOver",function(){	Crafty.audio.play("collide",1);		});;       //     .text("Settings");					Crafty.e("2D,DOM, creditpng, Mouse").attr({ x: 530, y: 500 }).bind("MouseOver",function(){	Crafty.audio.play("collide",1);		}).bind("Click",function(){	Crafty.audio.stop("piano");	Crafty.scene("creditscreen");		});         //   .text(" Credit");								Crafty.e("2D,DOM, quitpng, Mouse").attr({  x: 550, y: 600 }).bind("MouseOver",function(){	Crafty.audio.play("collide",1);		}).bind("Click",function(){	//Crafty.audio.stop("piano");	//Crafty.scene("creditscreen");	window.close();		});         //   .text(" Quit");							/*add the control latter first start to create the game world			*/				//    Crafty.background("rgb(255,30,230)");       	   	   //	 Crafty.scene("game");	   	   	   	   	   	});		Crafty.scene("creditscreen",function(){		  Crafty.background("rgb(208,231,249)");	  	  	  Crafty.e("2D,DOM,developedbypng").attr({x:440,y:200});	  Crafty.e("2D,DOM,devnamepng").attr({x:400,y:250});	  Crafty.e("2D,DOM,soundpng").attr({x:500,y:400});	  Crafty.e("2D,DOM,kevinpng").attr({x:420,y:450});	  Crafty.audio.play("sound",-1);	  Crafty.e("2D,DOM,back,Mouse").attr({x:30,y:30}).bind("Click",function(){	  Crafty.scene("option");	  }).bind("MouseOver",function(){	  Crafty.audio.play("collide",1);	  	  });	//  Crafty.e();		});				Crafty.scene("game",function(){		//Crafty.audio.play(a.mp3);		   var highscore,score=0;	   				 		Crafty.audio.play("sound",-1);   //Crafty.audio.play("collide",1);      	  Crafty.background("rgb(208,231,249)");	     for(var i=0;i<24;i++){	   	   Crafty.e("2D,Canvas,brick").attr({x:0, y:i*32}).setName("wall_left"+i);	   	   Crafty.e("2D,Canvas,brick").attr({x:1168, y:i*32}).setName("wall_right"+i);	   	   }	   	   var plat;	   	 	var pause=Crafty.e("2D,DOM,pause, Mouse").attr({x:34,y:0}).bind("Click",function(){		Crafty.pause();//	pause		});	var start=Crafty.e("2D,DOM,play, Mouse").attr({x:34,y:0}).bind("Click",function(){		Crafty.pause();//	pause	p	});		 	 //	create_platforms2();	//  create_platforms();  var player = Crafty.e("2D, DOM, pos1, Player,Collision")             .setName("player").bind("EnterFrame",function(from){	  	  	  if(this.y>=800){	  Crafty.scene("end_game");	  	  }	makeplat=false;	// });	this.y=this.y-5;       if(this.y>500){	makeplat=false;        	// csonsole.log(this.y+" and makeplat is "+makeplat);	//	create_platforms2();	}	else{	makeplat=true;	//this.attr({y:this.y+1});				}		// if(this.hit('Platform')){//       console.log(this.y);	 // this.attr({y:this.y});	   	   		// }		 }).bind("Moved",function(from){	 	  // 	create_cloud();	 //collsion with walls if(this.hit('brick')) {       this.attr({x: from.x, y:from.y});    }	 	 });//end of Moved binding of player	   player.addComponent('Gravity').gravity("Floor");  			 player.addComponent('LeftControls').leftControls("5").jump();				 			 var floor2 = Crafty.e("2D, Canvas, Color, Collision, Floor")		.color("blue") 	        .attr({h:10, w:1200, x:0, y:1000 }).setName("FLOOR").collision();						  						 player.onHit("Floor",function(){			  		//	  alert("Game Over");			  			 			  });  			  			  var name="pramod";				                var highscore_en=Crafty.e("2D,DOM,highscorepng").attr({x:800,y:16,z:-5});		  				                var score_en=Crafty.e("2D,DOM,scorepng").attr({x:897,y:46,z:-5});		  						  			var score_entity= Crafty.e("2D,DOM,Text,Color").attr({x:1040,y:63,z:-5,w:300,H:30}).textColor("#EFBC21)").css({"font-size":"30px","font-weight":"bold"});									// var 	font="assets/text/number.png";// var 	font="bluebubblefont.png";	            // var text1 = Crafty.e("2D, Canvas, SpriteText")                        // .attr({x: 340, y: 50,z:100, w:67, h:32})						                        // .registerFont("BlueBubble1", 34, font)                        // .text("21432");                          			  player.onHit("Platform",function(hit){			  // console.log(this._falling);			  			  if(this._falling==true)			  {			  this._falling=false;			  Crafty.audio.play("collide",1);			                 score=score+5;			  			  score_entity.text(""+score);			  }			  			  });			  			  // alert();				 							 create_cloudfun();			  create_platforms();			  create_platforms2();			  	});             //END OF MAIN SCENE		Crafty.scene("end_game",function(){			Crafty.audio.stop("sound");	Crafty.audio.play("piano",-1);		  Crafty.background("rgb(208,231,249)");	  Crafty.e("2D,DOM,gameoverpng").attr({x:480,y:350});	  //.text("Game  Over").attr({x:550,y:350}).textColor("#FF0000",0.7).textFont({size: '40px'});	    Crafty.e("2D,DOM,back,Mouse").attr({x:30,y:30}).bind("Click",function(){	  Crafty.scene("option");	  }).bind("MouseOver",function(){	  Crafty.audio.play("collide",1);	  	  });	  	});	  Crafty.c("Startcom",{	init:function(){	console.log("detected");		}		});      Crafty.c("LeftControls", {    init: function() {        this.requires('Multiway');		this.attr({ x:600, y:60})			 // alert(this.x)	//	 Console.log(this.x)	 },    leftControls: function(speed) {        this.multiway(speed, {W: -90, D: 0, A: 180});        return this;    },	jump:function(){ 			}    });Crafty.c("Platform",{init:function(){// this.attr({x:33,y:500,z:102,w:400,h:20})this.attr({x:33*Crafty.math.randomInt(1,26),y:20,w:250,h:30});//draw_gradient(this.x,this.y,this.w,this.h); // console.log(changepos);},movePlatforms: function(){// console.log(changepos);}});Crafty.c("Cloud",{init:function(){no_of_cloud=3; this.attr({x:Crafty.math.randomInt(0,750),y:0,z:-10}); // this.attr({x:750,y:10});create_cloud(this.x,this.y);},cloud:function(){}});	function create_cloud(x,y){var context=Crafty.canvas._canvas.getContext('2d');  // alert(x+"and "+y)	  // Crafty.background("rgb(208,231,249)");// alert(x);         context.beginPath();        context.moveTo(170+x, 80+y);        context.bezierCurveTo(130+x, 100+y, 130+x, 150+y, 230+x, 150+y);        context.bezierCurveTo(250+x, 180+y, 320+x, 180+y, 340+x, 150+y);        context.bezierCurveTo(420+x, 150+y, 420+x, 120+y, 390+x, 100+y);        context.bezierCurveTo(430+x, 40+y, 370+x, 30+y, 340+x, 50+y);        context.bezierCurveTo(320+x, 5+y, 250+x, 20+y, 250+x, 50+y);        context.bezierCurveTo(200+x, 5+y, 150+x, 20+y, 170+x , 80+y);    				        context.closePath();        // add linear gradient        var grd = context.createLinearGradient(230+x, 0+x, 370+x, 200+x);        // light blue        grd.addColorStop(0, "#8ED6FF");       // dark blue        grd.addColorStop(1, "#ffffff");        context.fillStyle = grd;        context.fill();          //    alert();        // add stroke        context.lineWidth = 5;        context.strokeStyle = "rgb(208,231,249)";        // context.strokeStyle = "black";        context.stroke();//		alert(); }function create_cloudfun(){this.y=0;	//for(var i=0;i<2;i++) {	   	 var clouds=Crafty.e("2D,DOM,Cloud,Collision").setName("Cloud")//.cloud()	 	 .bind("EnterFrame",function(){	//Crafty.background("rgba(208,231,249,59)");	// this.y=this.y+0.1;	if(makeplat){    this.y=this.y+2;	}	 if(this.y==300)	{		// alert()	//console.log("run");	create_cloudfun();		}	if(this.y==800)	{	clouds.destroy();//	console.log("element destroyed");		}			create_cloud(this.x,this.y);	   	 });	 			}}function create_platforms(){  // alert(navigator.userAgent);      var platform;    // for(var i=1;i<6;i++){  // platform=Crafty.e("2D,DOM, Platform, Collision").css({"background":" -webkit-gradient(linear, left top, left bottom, from(#ff0), to(#090))"}).attr({x:120*i,y:100*i,w:250,h:30});    // } var  platform1=Crafty.e("2D,DOM, Platform, Collision").css({"background":" -webkit-gradient(linear, left top, left bottom, from(#ff0), to(#090))"}).attr({x:120*1,y:200*1,w:250,h:30}); var  platform2=Crafty.e("2D,DOM, Platform, Collision").css({"background":" -webkit-gradient(linear, left top, left bottom, from(#ff0), to(#090))"}).attr({x:120*2,y:200*2,w:250,h:30});    var platform3=Crafty.e("2D,DOM, Platform, Collision").css({"background":" -webkit-gradient(linear, left top, left bottom, from(#ff0), to(#090))"}).attr({x:120*3,y:200*3,w:250,h:30});   var platform4=Crafty.e("2D,DOM, Platform, Collision").css({"background":" -webkit-gradient(linear, left top, left bottom, from(#ff0), to(#090))"}).attr({x:120*4,y:200*4,w:250,h:30});   var platform5=Crafty.e("2D,DOM, Platform, Collision").css({"background":" -webkit-gradient(linear, left top, left bottom, from(#ff0), to(#090))"}).attr({x:120*5,y:100*7,w:250,h:30});    //platform=Crafty.e("2D,DOM, Platform, Collision").css({"background":" -webkit-gradient(linear, left top, left bottom, from(#ff0), to(#090))"}).attr({x:Crafty.math.randomInt(33,750),y:100,w:250,h:30});    // if(navigator.userAgent.match("Gecko")=="Gecko"){ // alert("its mozilla	");//  css platform for mozilla  // platform.css({"background":" -moz-linear-gradient(top,  #ff0,  #090)"});    // }      platform1.bind("EnterFrame",function(){//console.log(makeplat);    if(makeplat==true){ platform1.attr({y:this.y+5});      }    if(this.y==800){  this.destroy();    }    });  platform2.bind("EnterFrame",function(){//console.log(makeplat);    if(makeplat==true){ platform2.attr({y:this.y+5});      }    if(this.y==800){  this.destroy();    }    // my name is pramod singh bisht  // another duplicate line          });  platform3.bind("EnterFrame",function(){// console.log(makeplat);    if(makeplat==true){ platform3.attr({y:this.y+5});      }    if(this.y==800){  this.destroy();    }      });  platform4.bind("EnterFrame",function(){//console.log(makeplat);    if(makeplat==true){ platform4.attr({y:this.y+5});      }    if(this.y==800){  this.destroy();    }    });  platform5.bind("EnterFrame",function(){//console.log(makeplat);    if(makeplat==true){ platform5.attr({y:this.y+5});  }    if(this.y==800){  this.destroy();    }    });	  	  	    // platform.onHit("Player",function(){			 // player.attr({y:this.y-93});			 // alert();			  // });			  			  }function draw_gradient(x,y,w,h){var ctx=Crafty.canvas._canvas.getContext('2d');var grd=ctx.createLinearGradient(x,y,w,h);grd.addColorStop(0,"#FF0000");grd.addColorStop(1,"#00FF00");ctx.fillStyle=grd;ctx.fillRect(x,y,w,h);//alert();}function create_platforms2(){this.y=0;// for(var i=0;i<6;i++) //{  // plat=Crafty.e("2D,DOM,Platform, Collision").css({"background":" -webkit-gradient(linear, left top, left bottom, from(#ff0), to(#090))"}).attr({x:33*Crafty.math.randomInt(1,26),y:150*(i+1),w:300,h:30}); plat=Crafty.e("2D,DOM,Platform, Collision").css({"background":" -webkit-gradient(linear, left top, left bottom, from(#ff0), to(#090))"});  //}  plat.bind("EnterFrame",function(){ //console.log(changepos); // changePosOfPlat(this.y)   if(makeplat==true){ this.attr({y:this.y+5});  }// if(makeplat==true)     if(this.y==200&&makeplat==true){ //console.log("create another cloud") create_platforms2(); //console.log("creating platform "+makeplat);//when makeplat is true only then new platfrom will create } if(this.y==800){ this.destroy(); // console.log("destroying the passed platform") } });            //end of bind  } 